## Autogenerated by Scribe. DO NOT MODIFY.

name: Authentication
description: ''
endpoints:
  -
    custom: []
    httpMethods:
      - POST
    uri: api/register
    metadata:
      custom: []
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Регистрация нового пользователя'
      description: ''
      authenticated: false
      deprecated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        custom: []
        name: email
        description: 'Email пользователя.'
        required: true
        example: test@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
      password:
        custom: []
        name: password
        description: 'Пароль (мин. 8 символов).'
        required: true
        example: password123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
    cleanBodyParameters:
      email: test@example.com
      password: password123
    fileParameters: []
    responses:
      -
        custom: []
        status: 201
        content: |-
          {
              "user": {
                  "id": 1,
                  "email": "test@example.com",
                  "created_at": "2025-10-26T21:05:59.000000Z",
                  "updated_at": "2025-10-26T21:05:59.000000Z"
              },
              "token": "1|random-token-string"
          }
        headers: []
        description: ''
      -
        custom: []
        status: 422
        content: |-
          {
              "errors": {
                  "email": ["The email has already been taken."],
                  "password": ["The password must be at least 8 characters."]
              }
          }
        headers: []
        description: ''
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
  -
    custom: []
    httpMethods:
      - POST
    uri: api/login
    metadata:
      custom: []
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Аутентификация пользователя'
      description: ''
      authenticated: false
      deprecated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        custom: []
        name: email
        description: 'Email пользователя.'
        required: true
        example: test@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
      password:
        custom: []
        name: password
        description: Пароль.
        required: true
        example: password123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        deprecated: false
    cleanBodyParameters:
      email: test@example.com
      password: password123
    fileParameters: []
    responses:
      -
        custom: []
        status: 200
        content: |-
          {
              "user": {
                  "id": 1,
                  "email": "test@example.com",
                  "created_at": "2025-10-26T21:05:59.000000Z",
                  "updated_at": "2025-10-26T21:05:59.000000Z"
              },
              "token": "2|random-token-string"
          }
        headers: []
        description: ''
      -
        custom: []
        status: 401
        content: |-
          {
              "message": "Invalid credentials"
          }
        headers: []
        description: ''
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
  -
    custom: []
    httpMethods:
      - POST
    uri: api/logout
    metadata:
      custom: []
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Выход из системы'
      description: ''
      authenticated: true
      deprecated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        custom: []
        status: 200
        content: |-
          {
              "message": "Logged out successfully"
          }
        headers: []
        description: ''
      -
        custom: []
        status: 401
        content: |-
          {
              "message": "Unauthenticated"
          }
        headers: []
        description: ''
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
